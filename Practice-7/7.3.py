def get_pins(observed):
    # Словарь для хранения возможных соседних чисел для каждой цифры
    adjacent = {'1': ['2', '4'], '2': ['1', '3', '5'], '3': ['2', '6'],
                '4': ['1', '5', '7'], '5': ['2', '4', '6', '8'], '6': ['3', '5', '9'],
                '7': ['4', '8'], '8': ['5', '7', '9', '0'], '9': ['6', '8'], '0': ['8']}

    # Инициализация списка возможных PIN-кодов предполагаемым PIN-кодом
    possible_pins = ['']

    # Цикл по каждой цифре в предполагаемом PIN-коде
    for digit in observed:
        # Создание нового списка возможных PIN-кодов, добавляя каждую возможную соседнюю цифру к каждому существующему PIN-коду
        possible_pins = [pin + adj_digit for pin in possible_pins for adj_digit in adjacent[digit]]

    # Возвращение списка возможных PIN-кодов
    return possible_pins

# Пример использования функции
print(get_pins('11'))
